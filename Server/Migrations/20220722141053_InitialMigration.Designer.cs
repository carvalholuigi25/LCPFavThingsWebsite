// <auto-generated />
using System;
using LCPFavThingsWebsite.Server.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LCPFavThingsWebsite.Server.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20220722141053_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LCPFavThingsWebsite.Shared.Models.Games", b =>
                {
                    b.Property<int>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GameId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GameId"), 1L, 1);

                    b.Property<string>("Category")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Company")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Cover")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DateRelease")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("DescT")
                        .HasMaxLength(1024)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1024)");

                    b.Property<string>("Genre")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("LangT")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Publisher")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(2,1)");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("GameId");

                    b.ToTable("Games", (string)null);

                    b.HasData(
                        new
                        {
                            GameId = 1,
                            Category = "Games",
                            Company = "Rockstar North",
                            Cover = "gtaiv.jpg",
                            DateRelease = "2008-04-28T00:00:00",
                            DescT = "GTA IV",
                            Genre = "Action,Adventure",
                            LangT = "English",
                            Publisher = "Rockstar Games",
                            Rating = 8m,
                            Title = "GTA IV"
                        });
                });

            modelBuilder.Entity("LCPFavThingsWebsite.Shared.Models.Movies", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MovieId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovieId"), 1L, 1);

                    b.Property<string>("Category")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Company")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Cover")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DescT")
                        .HasMaxLength(1024)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1024)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Genre")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("LangT")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(2,1)");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("MovieId");

                    b.ToTable("Movies", (string)null);

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            Category = "Movies",
                            Company = "Paramount",
                            Cover = "ff8.jpg",
                            DescT = "The Fast and Furious 8",
                            Duration = 150,
                            Genre = "Action",
                            LangT = "English",
                            Rating = 9m,
                            Title = "The Fast and Furious 8"
                        });
                });

            modelBuilder.Entity("LCPFavThingsWebsite.Shared.Models.TVSeries", b =>
                {
                    b.Property<int>("TVSerieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TVSerieId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TVSerieId"), 1L, 1);

                    b.Property<string>("Category")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Company")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Cover")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DescT")
                        .HasMaxLength(1024)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1024)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Genre")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("LangT")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(2,1)");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("TotalSeasons")
                        .HasColumnType("int");

                    b.HasKey("TVSerieId");

                    b.ToTable("TVSeries", (string)null);

                    b.HasData(
                        new
                        {
                            TVSerieId = 1,
                            Category = "TV Series",
                            Company = "AMC,FOX",
                            Cover = "ftwd.jpg",
                            DescT = "FTWD",
                            Duration = 45,
                            Genre = "Action,Adventure",
                            LangT = "English",
                            Rating = 9m,
                            Title = "Fear The Walking Dead",
                            TotalSeasons = 8
                        },
                        new
                        {
                            TVSerieId = 2,
                            Category = "TV Series",
                            Company = "CW,RTP1,AXN",
                            Cover = "theflash.jpg",
                            DescT = "The Flash",
                            Duration = 45,
                            Genre = "Action,Adventure",
                            LangT = "English",
                            Rating = 8m,
                            Title = "The Flash",
                            TotalSeasons = 8
                        });
                });

            modelBuilder.Entity("LCPFavThingsWebsite.Shared.Models.UserAuth", b =>
                {
                    b.Property<int>("UserAuthId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserAuthId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserAuthId"), 1L, 1);

                    b.Property<string>("Avatar")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Password")
                        .HasMaxLength(1024)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1024)");

                    b.Property<int>("RoleT")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserId");

                    b.Property<string>("Username")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserAuthId");

                    b.ToTable("UserAuth", (string)null);

                    b.HasData(
                        new
                        {
                            UserAuthId = 1,
                            Avatar = "guest.jpg",
                            Password = "$2a$11$ySaEiWAX8300yytiK2oMduJyZVd9SEvFT2iBGY4QnG5cqzwC.0kWG",
                            RoleT = 1,
                            UserId = 1,
                            Username = "guest"
                        },
                        new
                        {
                            UserAuthId = 2,
                            Avatar = "theflash.jpg",
                            Password = "$2a$11$OoQ4vk0CP114NcrIjjZNl.gYHjn5PEceoal3TOQx1L1gTm/WVsCMG",
                            RoleT = 3,
                            UserId = 2,
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("LCPFavThingsWebsite.Shared.Models.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("About")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Avatar")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Cover")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("DateAccountCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateBirthday")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LastName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PasswordT")
                        .HasMaxLength(1024)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1024)");

                    b.Property<string>("Pin")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Pin");

                    b.Property<int>("RoleT")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            About = "Guest is cool guy!",
                            Avatar = "guest.jpg",
                            Cover = "c_guest.jpg",
                            DateAccountCreated = new DateTime(2022, 7, 22, 14, 10, 52, 233, DateTimeKind.Utc).AddTicks(5936),
                            DateBirthday = new DateTime(1995, 5, 2, 23, 0, 0, 0, DateTimeKind.Utc),
                            Email = "guest@localhost.loc",
                            FirstName = "Guest",
                            LastName = "Convidado",
                            PasswordT = "$2a$11$bVX2VqTgAbxPWAomEzBANOn0/lJJx4htSiIbLnnAIXTvabjmFeESm",
                            Pin = "$2a$11$9AIEZntVC.MHESHCbZlREeAC01ztu.SQN6CmoZ3cp/sypREGlZEYu",
                            RoleT = 1,
                            Username = "guest"
                        },
                        new
                        {
                            UserId = 2,
                            About = "Admin is cool guy!",
                            Avatar = "theflash.jpg",
                            Cover = "theflash.jpg",
                            DateAccountCreated = new DateTime(2022, 7, 22, 14, 10, 52, 543, DateTimeKind.Utc).AddTicks(8519),
                            DateBirthday = new DateTime(1995, 6, 3, 23, 0, 0, 0, DateTimeKind.Utc),
                            Email = "admin@localhost.loc",
                            FirstName = "Admin",
                            LastName = "Admin",
                            PasswordT = "$2a$11$gJTPVgDmk9CEQvo3JXXMR.ZFTtPjV8/CyfYICDVsY4fChBwofm7XG",
                            Pin = "$2a$11$vm0pic8DTrKnW38ohpEGv.zWDuiYjIfhLNj.OxnL5hzroBDdxtYiS",
                            RoleT = 3,
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("LCPFavThingsWebsite.Shared.Models.UserToken", b =>
                {
                    b.Property<int>("TokenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TokenId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TokenId"), 1L, 1);

                    b.Property<string>("AccessToken")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1024)");

                    b.Property<int>("Authenticated")
                        .HasColumnType("int")
                        .HasColumnName("Authenticated");

                    b.Property<string>("Created")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1024)");

                    b.Property<string>("Expiration")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1024)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1024)");

                    b.Property<int>("UserAuthId")
                        .HasColumnType("int")
                        .HasColumnName("UserAuthId");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserId");

                    b.HasKey("TokenId");

                    b.HasIndex("UserAuthId")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserToken", (string)null);

                    b.HasData(
                        new
                        {
                            TokenId = 1,
                            AccessToken = "eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ",
                            Authenticated = 1,
                            Created = "2022-07-14T16:21:00",
                            Expiration = "2022-07-14T17:21:00",
                            Message = "OK",
                            UserAuthId = 1,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("LCPFavThingsWebsite.Shared.Models.UserToken", b =>
                {
                    b.HasOne("LCPFavThingsWebsite.Shared.Models.UserAuth", "UsersAuth")
                        .WithOne("TokenInfo")
                        .HasForeignKey("LCPFavThingsWebsite.Shared.Models.UserToken", "UserAuthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LCPFavThingsWebsite.Shared.Models.Users", "Users")
                        .WithOne("TokenInfo")
                        .HasForeignKey("LCPFavThingsWebsite.Shared.Models.UserToken", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");

                    b.Navigation("UsersAuth");
                });

            modelBuilder.Entity("LCPFavThingsWebsite.Shared.Models.UserAuth", b =>
                {
                    b.Navigation("TokenInfo")
                        .IsRequired();
                });

            modelBuilder.Entity("LCPFavThingsWebsite.Shared.Models.Users", b =>
                {
                    b.Navigation("TokenInfo")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
